---
- name: Deploy de script de servico do VNC
  template:
    src: vncserver_service.j2
    dest: "/etc/systemd/system/vncserver@.service"
    mode: 0755

- name: Habilitar servico do VNC
  systemd:
    name: "vncserver@:1.service"
    enabled: True
    state: stopped
    daemon-reload: True

- name: Criar pasta de configuracao do VNC
  file:
    name: "{{ novo_home }}/{{ ansible_facts.env.SUDO_USER }}/.vnc"
    state: directory
    owner: "{{ ansible_facts.env.SUDO_USER }}"
    group: "{{ ansible_facts.env.SUDO_USER }}"
  become: False
  register: vnc_config_caminho

- name: Copiar xstartup.sh para XFCE
  copy:
    src: xstartup.sh
    dest: "{{ vnc_config_caminho.path }}/xstartup"
    mode: 0755
    owner: "{{ ansible_facts.env.SUDO_USER }}"
    group: "{{ ansible_facts.env.SUDO_USER }}"
  become: False

- name: Copiar arquivo hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    mode: 0644
    owner: root
    group: root
    backup: True

- name: Copiar arquivo de configuracao do dnsmasq do libvirt
  template:
    src: virsh_net_define.j2
    dest: /tmp/virsh_net_define.xml
    mode: 0644
    owner: root
    group: root

- name: Deploy de script de reload do dnsmasq
  copy:
    src: reload_dnsmasq.sh
    dest: "{{ novo_home }}/{{ ansible_facts.env.SUDO_USER }}/scripts/"
    owner: "{{ ansible_facts.env.SUDO_USER }}"
    group: "{{ ansible_facts.env.SUDO_USER }}"
    mode: 0700

- name: Reload do dnsmasq
  shell: "virsh net-undefine default 2>/dev/null; virsh net-destroy default 2>/dev/null ;  virsh net-define /tmp/virsh_net_define.xml && virsh net-destroy default 2>/dev/null ; virsh net-start default"
  register: reload_dnsmasq
  changed_when: reload_dnsmasq.rc == 0

- name: Copiar script do Cloudflare
  template:
    src: cloudflare_sh.j2
    dest: "{{ novo_home }}/{{ ansible_facts.env.SUDO_USER }}/scripts/cloudflare.sh"
    owner: "{{ ansible_facts.env.SUDO_USER }}"
    group: "{{ ansible_facts.env.SUDO_USER }}"
    mode: 0700

- name: Executar script do Cloudflare
  command: "{{ novo_home }}/{{ ansible_facts.env.SUDO_USER }}/scripts/cloudflare.sh"
  register: reload_cloudflare
  changed_when: reload_cloudflare.rc == 0

- name: Agendar script do Cloudflare na cron do root - /etc/cron.d/01-cloudflare.cron
  template:
    src: cloudflare_cron.j2
    dest: /etc/cron.d/01-cloudflare
    owner: root
    group: root
    mode: 0644

- name: Liberar rede interna do Vagrant no firewalld
  firewalld:
    zone: trusted
    state: enabled
    permanent: True
    immediate: True
    source: "{{ item }}"
  loop:
    - 192.168.49.0/24
    - 192.168.121.0/24
    - 192.168.122.0/24
...
